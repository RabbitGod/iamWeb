
<template> 
    <div class="maintain_cont" >
        
        <div class="maintain_content">
            
            <div class="">
                <Row style="border-bottom:1px solid #ccc;padding:20px;">
                    <i-col span="24">
                        <Button type="primary" style="margin-right:20px;" @click="create">新增</Button>
                        <Button type="primary" style="margin-right:20px;" @click="queryUserList">查询</Button>
                        <Select v-model="system" style="width:200px;margin-right:20px;">
                            <Option v-for="item in systemList" :value="item.value" :key="item.value">{{ item.label }}</Option>
                        </Select>
                        <Select v-model="status" style="width:200px">
                            <Option v-for="item in statusList" :value="item.value" :key="item.value">{{ item.label }}</Option>
                        </Select>
                    </i-col>
                </Row>
                
                <div style="padding:20px;">
                    <Table size="small" border stripe :columns="userColumns" :data="userList"></Table>
                    <br>
                    <Page :current="currentPage" :total="total" show-elevator show-total show-sizer @on-change="pageChange" @on-page-size-change='pageSizeChange' />
                </div>

                <Modal v-model="modal"
                    footer-hide
                    width="1000"
                >
                    <div class="log">
                        <Form ref="userForm"  :label-width="80" inline >
                            <FormItem label="名称" prop="userName">
                                <Input v-model="log.name" readonly></Input>
                            </FormItem>
                            <FormItem label="开始" prop="employeeNumber">
                                <Input v-model="log.startTime" readonly></Input>
                            </FormItem>
                            <FormItem label="结束" prop="mail">
                                <Input v-model="log.endTime" readonly></Input>
                            </FormItem>
                            <FormItem label="调度" prop="dispatchStatus">
                                <Input v-model="log.dispatchStatus" readonly></Input>
                            </FormItem>
                            <FormItem label="执行" prop="executeStatus">
                                <Input v-model="log.executeType" readonly></Input>
                            </FormItem>
                            <FormItem label="类型" prop="executeType">
                                <Input v-model="log.executeType" readonly></Input>
                            </FormItem>
                            <FormItem label="详细" prop="description">
                                <div class="logBox">{{log.description}}</div>
                            </FormItem>
                        </Form>
                    </div>
                   
                    <div class="demo-drawer-footer">
                        <Button style="margin-right: 8px" type="primary" @click="cancel">关闭</Button>
                    </div>
                </Modal>
            </div>
        </div>
    </div>
</template>

<script>

import loadingImg from '@/assets/loading.gif';
import Cookies from 'js-cookie';
export default {
    data () {
        return {
            orgTreeData:[],
            currentPage:1,
            pageSize:10,
            total:50,
            system:'',
            status:'',
            modal:false,
            log:{},
            systemList:[
                {
                    value:'basic',
                    label:'泽佳基础开发平台'
                },
                {
                    value:'oa',
                    label:'泽佳OA系统'
                }
            ],
            statusList:[
                {
                    value:'1',
                    label:'通过'
                },
                {
                    value:'2',
                    label:'驳回'
                },
                {
                    value:'3',
                    label:'结束'
                }
            ],
            userColumns: [
                    {
                        title: '名称',
                        key: 'name',
                        width:'160',
                        ellipsis:true
                    },
                    {
                        title: '开始时间',
                        key: 'startTime',
                        width:'160'
                    },
                    {
                        title: '结束时间',
                        key: 'endTime',
                        width:'160'
                    },
                    {
                        title: '调度状态',
                        key: 'dispatchStatus',
                        width:'100',
                        render: (h, params) => {
                            return h('div', [
                                h('span', {
                                    props: {
                                        type: 'primary',
                                        size: 'small'
                                    },
                                    style: {
                                        marginRight: '5px',
                                        color:params.row.dispatchStatus == '正常'?'#00d842':''
                                    },
                                    on: {
                                        click: () => {
                                            
                                        }
                                    }
                                }, params.row.dispatchStatus),
                            ]);
                        }
                    },
                    {
                        title: '执行状态',
                        key: 'executeStatus',
                        width:'100',
                        render: (h, params) => {
                            return h('div', [
                                h('span', {
                                    props: {
                                        type: 'primary',
                                        size: 'small'
                                    },
                                    style: {
                                        marginRight: '5px',
                                        color:params.row.executeStatus == '正常'?'#00d842':''
                                    },
                                    on: {
                                        click: () => {
                                        }
                                    }
                                }, params.row.executeStatus),
                            ]);
                        }
                    },
                    {
                        title: '执行类型',
                        key: 'executeType'
                    },
                    {
                        title: '目录类型',
                        key: 'catalogType'
                    },
                    {
                        title: '描述',
                        key: 'description',
                        width:'300'
                    },
                    {
                        title: '操作',
                        align: 'center',
                        width:'200px',
                        fixed:'right',
                        render: (h, params) => {
                            return h('div', [
                                h('Button', {
                                    props: {
                                        type: 'primary',
                                        size: 'small'
                                    },
                                    style: {
                                        marginRight: '5px'
                                    },
                                    on: {
                                        click: () => {
                                            this.log = params.row;
                                            this.tigger();
                                        }
                                    }
                                }, '日志详情'),
                            ]);
                        }
                    }
                ],
            userList: []
        }
    },
    created(){
        this.queryUserList();
    },
    watch:{
        
    },
    computed:{
    },
    methods: {
        cancel(){
            this.modal = false
        },
        tigger(){
            this.modal = true
        },
        create(){

        },
        pageSizeChange(val){
            this.pageSize = val;
            this.queryUserList();
        },
        pageChange(val){
            this.currentPage = val;
            this.queryUserList();
        },
        queryUserList (){

            let _this = this;
            this.userList = [
                {
                    
                    name:'全员同步',
                    startTime:'2020-05-12 09:33',
                    endTime:'2020-05-13 09:33',
                    dispatchStatus:'正常',
                    executeStatus:'正常',
                    executeType:'自动',
                    catalogType:'',
                    description:'',
                },
                {
                    
                    name:'全员同步',
                    startTime:'2020-05-12 09:33',
                    endTime:'2020-05-13 09:33',
                    dispatchStatus:'正常',
                    executeStatus:'正常',
                    executeType:'自动',
                    catalogType:'',
                    description:'',
                },
                {
                    
                    name:'全员同步',
                    startTime:'2020-05-12 09:33',
                    endTime:'2020-05-13 09:33',
                    dispatchStatus:'正常',
                    executeStatus:'正常',
                    executeType:'自动',
                    catalogType:'',
                    description:'',
                },
                {
                    
                    name:'全员同步',
                    startTime:'2020-05-12 09:33',
                    endTime:'2020-05-13 09:33',
                    dispatchStatus:'正常',
                    executeStatus:'正常',
                    executeType:'自动',
                    catalogType:'',
                    description:'',
                }
            ]
        },
       
        
    
       
    },
    mounted(){
       
    }
};
</script>

<style lang="less" scoped>
    .maintain_cont{
        width: 100%;
        height:100%;
    }
    .maintain_cont .left{
        width: 240px;
        height: 100%;
        padding: 10px;
        overflow: auto;
        box-sizing: border-box;
        border-right: 1px solid #ccc;
        float: left;
    }
    .maintain_cont .right{
        width: calc(100% - 240px);
        height: 100%;
        overflow-y: auto;
        float: left;
    }
    .demo-drawer-footer{
        width: 100%;
        position: absolute;
        bottom: 0;
        left: 0;
        border-top: 1px solid #e8e8e8;
        padding: 10px 16px;
        text-align: right;
        background: #fff;
    }
    
    

    .maintain_content{
        width: 100%;
        height: 100%;
        background: #fff;
            overflow-y: auto;
    }

    .orgCont{
        padding:20px;
        font-size: 14px;
    }
    .orgCont .tableRow{
        margin-top: 2px;
    }
    .orgCont .tableRow:nth-child(odd) {
        background: #f1f1f1;
    }
    .orgCont .tableRow:nth-child(even) {

    }
    .orgCont .tableRow .ivu-col{
        height:60px;
        line-height: 40px;
        padding: 10px;
    }
    .orgCont .tableRow .ivu-col:nth-child(odd){
        background: #d7d7de;
        font-weight: bold;
    }
    .orgCont .tableRow .ivu-col:nth-child(even){
    }

    .log{
        padding: 20px 20px 40px 20px;
        max-height: 460px;
        overflow-y: auto;
    }
    .log .ivu-input-wrapper{
        width: 206px;
    }
    .logBox{
        border: 1px solid #dcdee2;
        width: 800px;
        padding: 10px;
        border-radius: 3px;
    }

</style>